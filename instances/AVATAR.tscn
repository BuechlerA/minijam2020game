[gd_scene load_steps=12 format=2]

[ext_resource path="res://assets/body_parts/chest_human.png" type="Texture" id=1]
[ext_resource path="res://scripts/AvatarBehaviour.gd" type="Script" id=2]
[ext_resource path="res://assets/body_parts/arm_fire.png" type="Texture" id=3]
[ext_resource path="res://assets/body_parts/body_fire.png" type="Texture" id=4]
[ext_resource path="res://assets/body_parts/eye_fire.png" type="Texture" id=5]
[ext_resource path="res://assets/body_parts/hair_fire.png" type="Texture" id=6]
[ext_resource path="res://assets/body_parts/ear_fire.png" type="Texture" id=7]
[ext_resource path="res://assets/body_parts/mouth_fire.png" type="Texture" id=8]
[ext_resource path="res://assets/body_parts/nose_fire.png" type="Texture" id=9]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform vec4 MY_COLOR: hint_color;
uniform float x_shift;
uniform float y_shift;
uniform float fader: hint_range(0.0, 1.0);
uniform float blur;
uniform float blend: hint_range(0.0,1.0);
uniform float distortion = 180.0;

float rand(vec2 coord)
{
	return fract(sin(dot(coord, vec2(12.9898, 78.233)))* 43758.5453123);
}
float noise(vec2 coord)
{
	vec2 i = floor(coord);
	vec2 f = fract(coord);
	
	// 4 corners of a rectangle surrounding our point
	float a = rand(i);
	float b = rand(i + vec2(1.0, 0.0));
	float c = rand(i + vec2(0.0, 1.0));
	float d = rand(i + vec2(1.0, 1.0));
	vec2 cubic = f * f * (3.0 - 2.0 * f);
	return mix(a, b, cubic.x) + (c - a) * cubic.y * (1.0 - cubic.x) + (d - b) * cubic.x * cubic.y;
}

vec2 D_UV(vec2 uv, float time)
{
	vec2 noise_1 = uv * 8.0;	
	vec2 noise_2 = uv * 8.0 + 4.0;	
	vec2 motion1 = vec2(time * 0.3, time + -0.4);
	vec2 motion2 = vec2(time * 0.1, time + 0.5);
	vec2 distort1 = vec2(noise(noise_1 + motion1), noise(noise_2 + motion1)) - vec2(0.5);
	vec2 distort2 = vec2(noise(noise_1 + motion2), noise(noise_2 + motion2)) - vec2(0.5);
	return (distort1 + distort2) / distortion; //180
}

void fragment()
{
	vec2 my_uv = (UV-0.5) * vec2(1.0,-1.0) + vec2(0.0,1);//SCREEN_UV;
	my_uv.x -= x_shift;
	my_uv.y -= y_shift;
	
	vec3 game_scene = textureLod(SCREEN_TEXTURE, SCREEN_UV, 0.0).rgb;     

	vec2 DUV = SCREEN_UV + D_UV(UV, TIME);
	vec3 distorted_game_scene =  textureLod(SCREEN_TEXTURE, DUV, blur).rgb  ;
	distorted_game_scene = mix(MY_COLOR.rgb, distorted_game_scene, blend);
	distorted_game_scene *= vec3( clamp(pow(1.0-UV.y, 0.5) * 2.0, 0.0 ,2.0)  ); //glow

	
	COLOR.rgb = distorted_game_scene; 
	COLOR.a= fader; 
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/MY_COLOR = Color( 0.572549, 0.572549, 0.572549, 1 )
shader_param/x_shift = null
shader_param/y_shift = null
shader_param/fader = 1.0
shader_param/blur = null
shader_param/blend = 0.0
shader_param/distortion = 180.0

[node name="AVATAR" type="Control"]
margin_left = -22.0
margin_top = -22.0
margin_right = 163.0
margin_bottom = 162.0
rect_min_size = Vector2( 184, 184 )
size_flags_horizontal = 5
size_flags_vertical = 5
script = ExtResource( 2 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="SP_Body" type="TextureRect" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 4 )
expand = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="SP_Chest" type="TextureRect" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 1 )
expand = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="SP_Arm" type="TextureRect" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 3 )
expand = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="SP_Eye" type="TextureRect" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 5 )
expand = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="SP_Mouth" type="TextureRect" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 8 )
expand = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="SP_Nose" type="TextureRect" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 9 )
expand = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="SP_Hair" type="TextureRect" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 6 )
expand = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="SP_Ear" type="TextureRect" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 7 )
expand = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="GlitchFX" type="ColorRect" parent="."]
visible = false
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
